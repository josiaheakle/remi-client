[{"/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/index.js":"1","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/reportWebVitals.js":"2","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/App.js":"3","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/EntryPage.js":"4","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/Login.js":"5","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/CreateAccount.js":"6","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/HomePage.js":"7","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/LoginHandler.js":"8"},{"size":568,"mtime":1607400698523,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1607231603958,"results":"11","hashOfConfig":"10"},{"size":1334,"mtime":1607565962847,"results":"12","hashOfConfig":"10"},{"size":3874,"mtime":1607570246614,"results":"13","hashOfConfig":"10"},{"size":2206,"mtime":1607566925918,"results":"14","hashOfConfig":"10"},{"size":4110,"mtime":1607566956398,"results":"15","hashOfConfig":"10"},{"size":391,"mtime":1607565982462,"results":"16","hashOfConfig":"10"},{"size":2035,"mtime":1607565931267,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1xfti7i",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/index.js",["40"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\n\n\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// TODO - add google analytics\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n",["41","42"],"/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/reportWebVitals.js",[],"/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/App.js",["43"],"\nimport { useEffect, useState } from \"react\"\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\n\nimport EntryPage from \"./Login/EntryPage.js\"\nimport HomePage from \"./HomePage.js\"\n\nimport LoginHandler from \"../modules/LoginHandler.js\"\n\nimport '../styles/App.css';\n\nconst App = () => {\n\n  const [ user, setUser ] = useState(undefined);\n  const [ isUserLoggedIn, setUserLoggedIn ] = useState(false);\n\n  const updateUser = (newUser) => {\n    setUser(newUser)\n  }\n\n  const updateLoggedInStatus = () => {\n    if(user !== undefined) {\n      setUserLoggedIn(true)\n    } else {\n      setUserLoggedIn(false)\n    }\n  }\n\n  LoginHandler.setUserUpdateCallback(updateUser)\n\n  useEffect(() => {\n    updateLoggedInStatus();\n  }, [user])\n\n  return (\n    <Router>\n      {(isUserLoggedIn===false) ? <Redirect to='/login' /> : null}\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            {(!user || user === {})? <Redirect to='/login' />:<Redirect to='/home' />}\n          </Route>\n          <Route path=\"/login\">\n            {(isUserLoggedIn===true)?<Redirect to='/home'/>:null}\n            <EntryPage />\n          </Route>\n          <Route path=\"/home\">\n            <HomePage user={user} />\n          </Route>\n\n        </Switch>\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/EntryPage.js",["44"],"/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/Login.js",["45","46"],"import { useState } from \"react\"\nimport LoginHandler from \"../../modules/LoginHandler.js\"\n\nconst Login = (props) => {\n\n    // props \n    //  loginSuccess ()\n    //      parent callback to tell entry page login is complete\n\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const [ alertMessage, setAlertMessage ] = useState('')\n\n\n    const updateValue = (e) => {\n        switch(e.target.id) {\n            case('email-input'):\n                setEmail(e.target.value)\n                break;\n            case('password-input'):\n                setPassword(e.target.value)\n                break;\n        }\n    }\n\n    const onLogin = async (e) => {\n        e.preventDefault();\n        const container = document.querySelector('.entry-container-grid')\n\n        const res = await LoginHandler.loginUser(email, password)\n        console.log(res)\n        if(res.type !== 'VALID') {\n            setAlert(res.message)\n        } else {\n            container.classList.remove = 'alert-message-on'\n            \n        }\n    }\n\n    const setAlert = (str) => {\n        const container = document.querySelector('.entry-container-grid')\n        container.classList.add('alert-message-on')\n        setAlertMessage(str);\n        // const alertMessageDom = document.querySelector('.alert-message')\n        // alertMessageDom.classList.add('mounting')\n        // setTimeout(() => {\n        //     alertMessageDom.classList.remove('mounting')\n        // }, 2000)\n    }\n\n    return(\n        <div>\n            {(alertMessage == '')?null:<div className='alert-message'>{alertMessage}</div>}\n            <form onSubmit={onLogin} className='login-form' >\n                <label htmlFor='email-input'>Email</label>\n                <input onChange={updateValue} id='email-input' name='Email' type='email' autoComplete='email' required={true} ></input>\n                <label htmlFor='password-input'>Password</label>\n                <input onChange={updateValue} id='password-input' name='Password' type='password' autoComplete='password' required={true} ></input>\n                <button type='submit'>Login</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/CreateAccount.js",["47","48"],"import { useState } from \"react\"\nimport LoginHandler from \"../../modules/LoginHandler.js\"\n\nconst CreateAccount = (props) => {\n\n    // props \n    //  goBack () \n    //      parent callback when user goes back instead of creating account\n\n    const [ username, setUsername ] = useState('')\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const [ passVerify, setPassVerify ] = useState('')\n\n    const [ alertMessage, setAlertMessage ] = useState('')\n\n    const passRequirements = (pass) => {\n        // Requirements - must have at least one uppercase, one lowercase, and one number\n\n        let hasUpper = false, hasLower = false, hasNum = false;\n        for (let i=0; i<pass.length; i++) {\n            // console.log(pass[i])\n\n            let code = pass.charCodeAt(i)\n\n            if(pass[i] > '0' && pass[i] < '9') hasNum = true;\n            else if(code >= 65 && code <= 90) hasUpper = true;\n            else if(code >= 97 && code <= 122) hasLower = true;\n\n\n        }\n\n        if(hasUpper && hasLower && hasNum) return true\n        else return false\n\n    }\n\n    const updateValue = (e) => {\n        switch(e.target.id) {\n            case('email-input'):\n                setEmail(e.target.value)\n                break;\n            case('password-input'):\n                setPassword(e.target.value)\n                break;\n            case('name-input'):\n                setUsername(e.target.value)    \n                break;\n            case('password-verify-input'):\n                setPassVerify(e.target.value)\n                break;\n        }\n    }\n\n    const onCreateAccount = async (e) => {\n        e.preventDefault();\n\n        if(password !== passVerify) {\n            setAlert('Passwords do not match, please try again.')\n        } else if (password.length<8) {\n            setAlert('Password must be at least 8 characters.')\n        } else if (!passRequirements(password)) {\n            setAlert('Password must have at least one uppercase, one lowercase, and one number.')\n        }else {\n            const res = await LoginHandler.createUser(email, username, password)\n            if(res.type !== 'VALID') {\n                setAlert(res.message)\n            } else {\n                const container = document.querySelector('.entry-container-grid')\n                container.classList.remove('alert-message-on') \n                setAlert('')  \n            }\n        }\n    }\n\n    const setAlert = (str) => {\n        setAlertMessage(str);\n        const container = document.querySelector('.entry-container-grid')\n        container.classList.add('alert-message-on')\n        setAlertMessage(str);\n        // const alertMessageDom = document.querySelector('.alert-message')\n        // alertMessageDom.classList.add('mounting')\n        // setTimeout(() => {\n        //     alertMessageDom.classList.remove('mounting')\n        // }, 2000)\n    }\n\n    return(\n        <div>\n            {(alertMessage == '')?null:<div className='alert-message'>{alertMessage}</div>}\n            <form onSubmit={onCreateAccount} className='login-form create-account-form'>\n                <label id='name-input-label' htmlFor='name-input'>Username</label>\n                <input onChange={updateValue} id='name-input' name='Display Name' type='text' autoComplete='username' required={true}></input>\n                <label htmlFor='email-input'>Email</label>\n                <input onChange={updateValue} id='email-input' name='Email' type='email' autoComplete='email' required={true}></input>\n                <label htmlFor='password-input'>Password</label>\n                <input onChange={updateValue} id='password-input' name='Password' type='password' autoComplete='password' required={true}></input>\n                <label htmlFor='password-verify-input'>Verify Password </label>\n                <input onChange={updateValue} id='password-verify-input' name='Password Verification' type='password' autoComplete='off' required={true}></input>\n                <button type='submit'>Submit</button>\n            </form>\n        </div>\n    );\n}\n\nexport default CreateAccount;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/HomePage.js",["49"],"import LoginHandler from \"../modules/LoginHandler.js\"\nimport Login from \"./Login/Login.js\";\n\nconst HomePage = ( props ) => {\n\n    \n\n    return(\n        <div className=\"HomePage\">\n            <h1> Hello, {(props.user !== undefined) ? props.user.username : 'user'} </h1>\n            <button onClick={LoginHandler.logoutUser} > Logout </button>\n        </div>\n    );\n}\n\nexport default HomePage;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/LoginHandler.js",[],{"ruleId":"50","severity":1,"message":"51","line":8,"column":8,"nodeType":"52","messageId":"53","endLine":8,"endColumn":23},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":33,"column":6,"nodeType":"60","endLine":33,"endColumn":12,"suggestions":"61"},{"ruleId":"58","severity":1,"message":"62","line":58,"column":8,"nodeType":"60","endLine":58,"endColumn":10,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":16,"column":9,"nodeType":"66","messageId":"67","endLine":23,"endColumn":10},{"ruleId":"68","severity":1,"message":"69","line":53,"column":28,"nodeType":"70","messageId":"71","endLine":53,"endColumn":30},{"ruleId":"64","severity":1,"message":"65","line":39,"column":9,"nodeType":"66","messageId":"67","endLine":52,"endColumn":10},{"ruleId":"68","severity":1,"message":"69","line":90,"column":28,"nodeType":"70","messageId":"71","endLine":90,"endColumn":30},{"ruleId":"50","severity":1,"message":"72","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":13},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateLoggedInStatus'. Either include it or remove the dependency array.","ArrayExpression",["75"],"React Hook useEffect has a missing dependency: 'animateNextLetter'. Either include it or remove the dependency array.",["76"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Login' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [updateLoggedInStatus, user]",{"range":"81","text":"82"},"Update the dependencies array to be: [animateNextLetter]",{"range":"83","text":"84"},[745,751],"[updateLoggedInStatus, user]",[1811,1813],"[animateNextLetter]"]