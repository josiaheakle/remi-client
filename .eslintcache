[{"/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/index.js":"1","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/reportWebVitals.js":"2","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/App.js":"3","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/EntryPage.js":"4","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/Login.js":"5","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/CreateAccount.js":"6","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/HomePage.js":"7","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/LoginHandler.js":"8","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Reminders/ReminderHub.js":"9","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Reminders/NewReminderForm.js":"10","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/ReminderHandler.js":"11","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/TimeZoneHandler.js":"12"},{"size":568,"mtime":1607400698523,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1607231603958,"results":"15","hashOfConfig":"14"},{"size":2100,"mtime":1608069382822,"results":"16","hashOfConfig":"14"},{"size":3927,"mtime":1608066987969,"results":"17","hashOfConfig":"14"},{"size":2254,"mtime":1607960328434,"results":"18","hashOfConfig":"14"},{"size":5492,"mtime":1608076283656,"results":"19","hashOfConfig":"14"},{"size":734,"mtime":1608076599156,"results":"20","hashOfConfig":"14"},{"size":2143,"mtime":1608069549194,"results":"21","hashOfConfig":"14"},{"size":417,"mtime":1608071608664,"results":"22","hashOfConfig":"14"},{"size":2850,"mtime":1607965742697,"results":"23","hashOfConfig":"14"},{"size":2984,"mtime":1608070347159,"results":"24","hashOfConfig":"14"},{"size":7747,"mtime":1607960001668,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1xfti7i",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"29"},"/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/index.js",["59"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\n\n\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// TODO - add google analytics\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n",["60","61"],"/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/reportWebVitals.js",[],"/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/App.js",["62"],"\nimport { useEffect, useState } from \"react\"\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\n\nimport EntryPage from \"./Login/EntryPage.js\"\nimport HomePage from \"./HomePage.js\"\nimport ReminderHub from \"./Reminders/ReminderHub.js\"\n\nimport bgImg from \"../media/coffee-and-map.jpg\"\n\nimport LoginHandler from \"../modules/LoginHandler.js\"\n\n\nimport '../styles/App.css';\nimport ReminderHandler from \"../modules/ReminderHandler.js\"\n\nconst App = () => {\n\n  const [ user, setUser ] = useState(undefined);\n  const [ isUserLoggedIn, setUserLoggedIn ] = useState(false);\n  const [ reminders, setReminders ] = useState(undefined)\n\n  const updateUser = (newUser) => {\n    setUser(newUser)\n  }\n\n  const updateLoggedInStatus = () => {\n    if(user !== undefined) {\n      setUserLoggedIn(true)\n    } else {\n      setUserLoggedIn(false)\n    }\n  }\n\n  const getAllUserReminders = async () => {\n    const rems = await ReminderHandler.getAllReminders()\n\n    console.log(`reminders:`)\n    console.log(rems)\n\n    setReminders(rems)\n  }\n\n  LoginHandler.setUserUpdateCallback(updateUser)\n  ReminderHandler.setUpdateReminderCallback(getAllUserReminders)\n\n  useEffect(() => {\n    updateLoggedInStatus();\n  }, [user])\n\n  useEffect(() => {\n    if(isUserLoggedIn === true) {\n      getAllUserReminders()\n    }\n  }, [isUserLoggedIn])\n\n  \n\n  return (\n    <div className='App' style={{ backgroundImage: `url(${bgImg})` }}>\n      <Router>\n        {(isUserLoggedIn===false) ? <Redirect to='/login' /> : null}\n          <Switch>\n            <Route exact path=\"/\">\n              {(!user || user === {})? <Redirect to='/login' />:<Redirect to='/home' />}\n            </Route>\n            <Route path=\"/login\">\n              {(isUserLoggedIn===true)?<Redirect to='/home'/>:null}\n              <EntryPage />\n            </Route>\n            <Route path=\"/home\">\n              <HomePage user={user} />\n            </Route>\n            <Route path=\"/reminders\">\n              <ReminderHub reminders={reminders} />\n            </Route>\n\n          </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/EntryPage.js",["63"],"\nimport { useState, useEffect } from \"react\"\n\nimport ghIcon from \"../../media/GitHubIconLight.png\"\n\nimport \"../../styles/EntryPage.css\"\n\nimport Login from \"./Login.js\"\nimport CreateAccount from \"./CreateAccount.js\"\n\nconst EntryPage = (  ) => {\n\n    const [createAccountOpen, setCreateAccountOpen] = useState(false)\n    const [introText, setIntroText] = useState('');\n    const [stopAnimation, setStopAnimation] = useState(false)\n\n    let fullIntroText = 'Hello, my name is Remi. I can help you schedule text remiders and create checklists. Login or create an account and we can get started!';\n    let introTextPlaceholder = '';\n    let i = 0;\n    const animateNextLetter = (pauseBool) => {\n        if(i<=fullIntroText.length) {\n            setIntroText(introTextPlaceholder)\n            setTimeout(() => {\n                if(!pauseBool) introTextPlaceholder = `${introTextPlaceholder}${fullIntroText[i++]}`\n                else pauseBool = false;\n                if(fullIntroText[i] === '.') pauseBool = true;\n                if(!stopAnimation) animateNextLetter();\n            }, 100)\n        }\n    }\n\n    const createAccount = () => {\n\n        const loginHeader = document.querySelector('.login-main-header')\n        loginHeader.classList.add('create-account')\n\n        const container = document.querySelector('.entry-container-grid')\n        container.classList.remove('alert-message-on')\n        setCreateAccountOpen(true);\n    }\n\n    const closeCreateAccount = () => {\n\n        const loginHeader = document.querySelector('.login-main-header')\n        loginHeader.classList.remove('create-account')\n\n\n        const container = document.querySelector('.entry-container-grid')\n        container.classList.remove('alert-message-on')   \n        setCreateAccountOpen(false);\n    }\n\n    useEffect(() => {\n        animateNextLetter();\n        return () => {\n            setStopAnimation(true)\n        }\n    }, [])\n\n    return (\n        <div className='EntryPage' >\n\n            <div className='entry-center-container'>\n                <div id='intro-text-container'>\n                    <div id='intro-text'>\n                        {introText}\n                    </div>\n                </div>\n\n                <div className={`entry-container-grid ${(!createAccountOpen) ? 'login' : 'create-account'}`}>\n                    {(createAccountOpen)?\n                        <div className='go-back-button-container'>\n                            <button onClick={closeCreateAccount} type='button' className='go-back-button'><i className='material-icons'>arrow_back</i></button>\n                        </div>\n                    :null}\n                    <div className='login-container-header'>\n                        <h2 className=\"login-main-header\"> {(!createAccountOpen)? `login` : `new account`} </h2>\n                    </div>\n\n                    {(createAccountOpen === false) ?\n                        <div className='create-account-closed'>\n                            <Login />\n                            <div className='create-account-container login-container'>\n                                <h3 className='login-header'>Need an account?</h3>\n                                <button onClick={createAccount}> Create Account </button>\n                            </div>\n                        </div>\n                        :\n                        <CreateAccount />\n                    }\n\n                </div>\n            </div>\n\n            <span className='created-by-footer'>Created by\n                <a className='footer-link' href=\"https://josiaheakle.com\" title=\"Josiah Eakle Portfolio\">\n                    Josiah Eakle\n                </a>\n                <a href=\"https://github.com/josiaheakle/reminder-client\" title=\"Github\">\n                    <img className='je-icon' src={ghIcon} alt='GitHub Icon' />\n                </a>\n            </span>\n\n        </div>\n    );\n}\n\nexport default EntryPage;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/Login.js",["64","65"],"import { useState } from \"react\"\nimport LoginHandler from \"../../modules/LoginHandler.js\"\n\nconst Login = (props) => {\n\n    // props \n    //  loginSuccess ()\n    //      parent callback to tell entry page login is complete\n\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const [ alertMessage, setAlertMessage ] = useState('')\n\n\n    const updateValue = (e) => {\n        switch(e.target.id) {\n            case('email-input'):\n                setEmail(e.target.value)\n                break;\n            case('password-input'):\n                setPassword(e.target.value)\n                break;\n        }\n    }\n\n    const onLogin = async (e) => {\n        e.preventDefault();\n        const container = document.querySelector('.entry-container-grid')\n\n        const res = await LoginHandler.loginUser(email, password)\n        console.log(res)\n        if(res.type !== 'VALID') {\n            setAlert(res.message)\n        } else {\n            container.classList.remove = 'alert-message-on'\n            \n        }\n    }\n\n    const setAlert = (str) => {\n        const container = document.querySelector('.entry-container-grid')\n        container.classList.add('alert-message-on')\n        setAlertMessage(str);\n        // const alertMessageDom = document.querySelector('.alert-message')\n        // alertMessageDom.classList.add('mounting')\n        // setTimeout(() => {\n        //     alertMessageDom.classList.remove('mounting')\n        // }, 2000)\n    }\n\n    return(\n        <div>\n            {(alertMessage == '')?null:<div className='alert-message'>{alertMessage}</div>}\n            <form onSubmit={onLogin} className='login-form' >\n                <label htmlFor='email-input'>Email</label>\n                <input className='login-input' onChange={updateValue} id='email-input' name='Email' type='email' autoComplete='email' required={true} ></input>\n                <label htmlFor='password-input'>Password</label>\n                <input className='login-input' onChange={updateValue} id='password-input' name='Password' type='password' autoComplete='password' required={true} ></input>\n                <button type='submit'>Login</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/CreateAccount.js",["66","67"],"/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/HomePage.js",["68","69"],"/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/LoginHandler.js",[],"/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Reminders/ReminderHub.js",["70"],"\n\nimport { useEffect } from \"react\";\nimport NewReminderForm from \"./NewReminderForm.js\"\n\nimport '../../styles/ReminderHub.css'\n\nconst ReminderHub = (props) => {\n\n    // useEffect(() => {\n    //     console.log(props.reminders)\n    // }, [])\n\n\n\n    return(\n        <div className='ReminderHub'>\n            <h1> Reminder hub </h1>\n\n            <NewReminderForm />\n\n\n        </div>\n    );\n}\n\nexport default ReminderHub;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Reminders/NewReminderForm.js",["71","72","73"],"\nimport { useEffect, useState } from \"react\";\nimport ReminderHandler from \"../../modules/ReminderHandler.js\"\nimport TimeZoneHandler from \"../../modules/TimeZoneHandler.js\"\n\n    /*\n  const newReminder = {\n    title: req.body.title,\n    start_date: req.body.startdate,\n    frequency: req.body.frequency,\n    text_string: req.body.description || undefined,\n    link: req.body.link || undefined\n  }\n    */\n\nconst NewReminderForm = () => {\n\n    const [ title, setTitle ] = useState(undefined)\n    const [ start_date, setStartDate ] = useState(undefined)\n    const [ frequency, setFrequency ] = useState('Once')\n    const [ text, setTextString ] = useState(undefined)\n\n    const updateValue = (e) => {\n        switch(e.target.id) {\n            case('title-input'):\n                setTitle(e.target.value)\n                break;\n            case('text-string-input'):\n                setTextString(e.target.value)\n                break;\n            case('start-date-input'):\n                setStartDate(e.target.value)    \n                break;\n            case('frequency-input'):\n                setFrequency(e.target.options[e.target.selectedIndex].text)\n                break;\n        }\n    }\n\n    const submitForm = async (e) => {\n        e.preventDefault();\n        const res = await ReminderHandler.createReminder({\n            title: title,\n            start_date: start_date,\n            freq: frequency,\n            text: text,\n        })\n        console.log(res)\n    }\n\n\n\n    return (\n        <div className='NewReminderForm'>\n            <form onSubmit={submitForm}>\n                <label id='title-input-label' htmlFor='name-input'>Title</label>\n                <input onChange={updateValue} id='title-input' name='Title' type='text' required={true}></input>\n                <label htmlFor='text-string-input'>Reminder</label>\n                <textarea onChange={updateValue} id='text-string-input' name='Description' type='text' required={false}></textarea>\n                <label htmlFor='start-date-input'>Date</label>\n                <input onChange={updateValue} id='start-date-input' name='Start Date' type='datetime-local' required={true}></input>\n                <label htmlFor='frequency-input'>Frequency</label>\n                <select onChange={updateValue} name='Frequency' id='frequency-input' required={true}>\n                    <option value='once'>Once</option>\n                    <option value='daily'>Daily</option>\n                    <option value='weekly'>Weekly</option>\n                    <option value='bi-weekly'>Bi-Weekly</option>\n                    <option value='monthly'>Monthly</option>\n                    <option value='yearly'>Annually</option>\n                </select>\n                <button type='submit'> Submit </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewReminderForm;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/ReminderHandler.js",["74","75","76"],"import { Component } from \"react\";\nimport Login from \"../components/Login/Login.js\";\nimport LoginHandler from \"./LoginHandler.js\"\n\nconst axios = require('axios')\nrequire('dotenv').config();\n\n\n\nconst ReminderHandler = (() => {\n\n    const apiUrl = process.env.REACT_APP_API_URL;\n\n    /*\n  const newReminder = {\n    title: req.body.title,\n    startdate: req.body.startdate,\n    frequency: req.body.frequency,\n    description: req.body.description || undefined,\n    link: req.body.link || undefined\n  }\n    */\n\n    let _callback = undefined;\n\n    const setUpdateReminderCallback = (callback) => {\n        _callback = callback\n    }\n\n    const _updateReminders = () => {\n        _callback()\n    }\n\n    const createReminder = async (reminderObj) => {\n\n        // console.log(`REMINDER:`)\n        // console.log(reminderObj)\n\n        const currentUser = LoginHandler.getCurrentUser()\n        // console.log(`userId: ${currentUser._id}`)\n        const options = {\n            url: `${apiUrl}/reminder/new`,\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json;charset=UTF-8'\n            },\n            data: {            \n                'title': reminderObj.title,\n                'start_date': reminderObj.start_date,\n                'freq': reminderObj.freq,\n                'text': reminderObj.text,\n                'time_zone': currentUser.time_zone,\n                'user': currentUser._id\n            }\n        }\n\n        \n        const res = await axios(options)\n        _updateReminders()\n        return res\n    }\n\n    const deleteReminder = () => {\n\n    }\n\n    const editReminder = async (id, reminderObj) => {\n\n        const currentUser = LoginHandler.getCurrentUser()\n\n        const options = {\n            url: `${apiUrl}/reminder/update/${id}`,\n            method: 'POST',\n            headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8'\n            },\n            data: {            \n                'title': reminderObj.title,\n                'start_date': reminderObj.start_date,\n                'freq': reminderObj.freq,\n                'text': reminderObj.text,\n                'time_zone': currentUser.time_zone,\n                'user': currentUser._id\n            }\n        }\n\n        const res = await axios(options)\n        _updateReminders()\n        return res\n    }\n\n    const getAllReminders = async () => {\n\n        const currentUser =  LoginHandler.getCurrentUser()\n\n        const options = {\n            url: `${apiUrl}/reminder/all/${currentUser._id}`,\n            method: 'GET',\n        }\n        const res = await axios(options)\n        return res.data\n        \n\n    }\n\n    return {\n        createReminder: createReminder,\n        editReminder: editReminder,\n        getAllReminders: getAllReminders,\n        setUpdateReminderCallback: setUpdateReminderCallback,\n    }\n\n})(); \n\nexport default ReminderHandler;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/TimeZoneHandler.js",["77"],"\nconst axios = require('axios')\n\nconst TimeZoneHandler = (() => {\n\n    let timezoneData = [\"Africa/Abidjan\",\"Africa/Accra\",\"Africa/Algiers\",\"Africa/Bissau\",\"Africa/Cairo\",\"Africa/Casablanca\",\"Africa/Ceuta\",\"Africa/El_Aaiun\",\"Africa/Johannesburg\",\"Africa/Juba\",\"Africa/Khartoum\",\"Africa/Lagos\",\"Africa/Maputo\",\"Africa/Monrovia\",\"Africa/Nairobi\",\"Africa/Ndjamena\",\"Africa/Sao_Tome\",\"Africa/Tripoli\",\"Africa/Tunis\",\"Africa/Windhoek\",\"America/Adak\",\"America/Anchorage\",\"America/Araguaina\",\"America/Argentina/Buenos_Aires\",\"America/Argentina/Catamarca\",\"America/Argentina/Cordoba\",\"America/Argentina/Jujuy\",\"America/Argentina/La_Rioja\",\"America/Argentina/Mendoza\",\"America/Argentina/Rio_Gallegos\",\"America/Argentina/Salta\",\"America/Argentina/San_Juan\",\"America/Argentina/San_Luis\",\"America/Argentina/Tucuman\",\"America/Argentina/Ushuaia\",\"America/Asuncion\",\"America/Atikokan\",\"America/Bahia\",\"America/Bahia_Banderas\",\"America/Barbados\",\"America/Belem\",\"America/Belize\",\"America/Blanc-Sablon\",\"America/Boa_Vista\",\"America/Bogota\",\"America/Boise\",\"America/Cambridge_Bay\",\"America/Campo_Grande\",\"America/Cancun\",\"America/Caracas\",\"America/Cayenne\",\"America/Chicago\",\"America/Chihuahua\",\"America/Costa_Rica\",\"America/Creston\",\"America/Cuiaba\",\"America/Curacao\",\"America/Danmarkshavn\",\"America/Dawson\",\"America/Dawson_Creek\",\"America/Denver\",\"America/Detroit\",\"America/Edmonton\",\"America/Eirunepe\",\"America/El_Salvador\",\"America/Fort_Nelson\",\"America/Fortaleza\",\"America/Glace_Bay\",\"America/Goose_Bay\",\"America/Grand_Turk\",\"America/Guatemala\",\"America/Guayaquil\",\"America/Guyana\",\"America/Halifax\",\"America/Havana\",\"America/Hermosillo\",\"America/Indiana/Indianapolis\",\"America/Indiana/Knox\",\"America/Indiana/Marengo\",\"America/Indiana/Petersburg\",\"America/Indiana/Tell_City\",\"America/Indiana/Vevay\",\"America/Indiana/Vincennes\",\"America/Indiana/Winamac\",\"America/Inuvik\",\"America/Iqaluit\",\"America/Jamaica\",\"America/Juneau\",\"America/Kentucky/Louisville\",\"America/Kentucky/Monticello\",\"America/La_Paz\",\"America/Lima\",\"America/Los_Angeles\",\"America/Maceio\",\"America/Managua\",\"America/Manaus\",\"America/Martinique\",\"America/Matamoros\",\"America/Mazatlan\",\"America/Menominee\",\"America/Merida\",\"America/Metlakatla\",\"America/Mexico_City\",\"America/Miquelon\",\"America/Moncton\",\"America/Monterrey\",\"America/Montevideo\",\"America/Nassau\",\"America/New_York\",\"America/Nipigon\",\"America/Nome\",\"America/Noronha\",\"America/North_Dakota/Beulah\",\"America/North_Dakota/Center\",\"America/North_Dakota/New_Salem\",\"America/Nuuk\",\"America/Ojinaga\",\"America/Panama\",\"America/Pangnirtung\",\"America/Paramaribo\",\"America/Phoenix\",\"America/Port-au-Prince\",\"America/Port_of_Spain\",\"America/Porto_Velho\",\"America/Puerto_Rico\",\"America/Punta_Arenas\",\"America/Rainy_River\",\"America/Rankin_Inlet\",\"America/Recife\",\"America/Regina\",\"America/Resolute\",\"America/Rio_Branco\",\"America/Santarem\",\"America/Santiago\",\"America/Santo_Domingo\",\"America/Sao_Paulo\",\"America/Scoresbysund\",\"America/Sitka\",\"America/St_Johns\",\"America/Swift_Current\",\"America/Tegucigalpa\",\"America/Thule\",\"America/Thunder_Bay\",\"America/Tijuana\",\"America/Toronto\",\"America/Vancouver\",\"America/Whitehorse\",\"America/Winnipeg\",\"America/Yakutat\",\"America/Yellowknife\",\"Antarctica/Casey\",\"Antarctica/Davis\",\"Antarctica/DumontDUrville\",\"Antarctica/Macquarie\",\"Antarctica/Mawson\",\"Antarctica/Palmer\",\"Antarctica/Rothera\",\"Antarctica/Syowa\",\"Antarctica/Troll\",\"Antarctica/Vostok\",\"Asia/Almaty\",\"Asia/Amman\",\"Asia/Anadyr\",\"Asia/Aqtau\",\"Asia/Aqtobe\",\"Asia/Ashgabat\",\"Asia/Atyrau\",\"Asia/Baghdad\",\"Asia/Baku\",\"Asia/Bangkok\",\"Asia/Barnaul\",\"Asia/Beirut\",\"Asia/Bishkek\",\"Asia/Brunei\",\"Asia/Chita\",\"Asia/Choibalsan\",\"Asia/Colombo\",\"Asia/Damascus\",\"Asia/Dhaka\",\"Asia/Dili\",\"Asia/Dubai\",\"Asia/Dushanbe\",\"Asia/Famagusta\",\"Asia/Gaza\",\"Asia/Hebron\",\"Asia/Ho_Chi_Minh\",\"Asia/Hong_Kong\",\"Asia/Hovd\",\"Asia/Irkutsk\",\"Asia/Jakarta\",\"Asia/Jayapura\",\"Asia/Jerusalem\",\"Asia/Kabul\",\"Asia/Kamchatka\",\"Asia/Karachi\",\"Asia/Kathmandu\",\"Asia/Khandyga\",\"Asia/Kolkata\",\"Asia/Krasnoyarsk\",\"Asia/Kuala_Lumpur\",\"Asia/Kuching\",\"Asia/Macau\",\"Asia/Magadan\",\"Asia/Makassar\",\"Asia/Manila\",\"Asia/Nicosia\",\"Asia/Novokuznetsk\",\"Asia/Novosibirsk\",\"Asia/Omsk\",\"Asia/Oral\",\"Asia/Pontianak\",\"Asia/Pyongyang\",\"Asia/Qatar\",\"Asia/Qostanay\",\"Asia/Qyzylorda\",\"Asia/Riyadh\",\"Asia/Sakhalin\",\"Asia/Samarkand\",\"Asia/Seoul\",\"Asia/Shanghai\",\"Asia/Singapore\",\"Asia/Srednekolymsk\",\"Asia/Taipei\",\"Asia/Tashkent\",\"Asia/Tbilisi\",\"Asia/Tehran\",\"Asia/Thimphu\",\"Asia/Tokyo\",\"Asia/Tomsk\",\"Asia/Ulaanbaatar\",\"Asia/Urumqi\",\"Asia/Ust-Nera\",\"Asia/Vladivostok\",\"Asia/Yakutsk\",\"Asia/Yangon\",\"Asia/Yekaterinburg\",\"Asia/Yerevan\",\"Atlantic/Azores\",\"Atlantic/Bermuda\",\"Atlantic/Canary\",\"Atlantic/Cape_Verde\",\"Atlantic/Faroe\",\"Atlantic/Madeira\",\"Atlantic/Reykjavik\",\"Atlantic/South_Georgia\",\"Atlantic/Stanley\",\"Australia/Adelaide\",\"Australia/Brisbane\",\"Australia/Broken_Hill\",\"Australia/Currie\",\"Australia/Darwin\",\"Australia/Eucla\",\"Australia/Hobart\",\"Australia/Lindeman\",\"Australia/Lord_Howe\",\"Australia/Melbourne\",\"Australia/Perth\",\"Australia/Sydney\",\"CET\",\"CST6CDT\",\"EET\",\"EST\",\"EST5EDT\",\"Etc/GMT\",\"Etc/GMT+1\",\"Etc/GMT+10\",\"Etc/GMT+11\",\"Etc/GMT+12\",\"Etc/GMT+2\",\"Etc/GMT+3\",\"Etc/GMT+4\",\"Etc/GMT+5\",\"Etc/GMT+6\",\"Etc/GMT+7\",\"Etc/GMT+8\",\"Etc/GMT+9\",\"Etc/GMT-1\",\"Etc/GMT-10\",\"Etc/GMT-11\",\"Etc/GMT-12\",\"Etc/GMT-13\",\"Etc/GMT-14\",\"Etc/GMT-2\",\"Etc/GMT-3\",\"Etc/GMT-4\",\"Etc/GMT-5\",\"Etc/GMT-6\",\"Etc/GMT-7\",\"Etc/GMT-8\",\"Etc/GMT-9\",\"Etc/UTC\",\"Europe/Amsterdam\",\"Europe/Andorra\",\"Europe/Astrakhan\",\"Europe/Athens\",\"Europe/Belgrade\",\"Europe/Berlin\",\"Europe/Brussels\",\"Europe/Bucharest\",\"Europe/Budapest\",\"Europe/Chisinau\",\"Europe/Copenhagen\",\"Europe/Dublin\",\"Europe/Gibraltar\",\"Europe/Helsinki\",\"Europe/Istanbul\",\"Europe/Kaliningrad\",\"Europe/Kiev\",\"Europe/Kirov\",\"Europe/Lisbon\",\"Europe/London\",\"Europe/Luxembourg\",\"Europe/Madrid\",\"Europe/Malta\",\"Europe/Minsk\",\"Europe/Monaco\",\"Europe/Moscow\",\"Europe/Oslo\",\"Europe/Paris\",\"Europe/Prague\",\"Europe/Riga\",\"Europe/Rome\",\"Europe/Samara\",\"Europe/Saratov\",\"Europe/Simferopol\",\"Europe/Sofia\",\"Europe/Stockholm\",\"Europe/Tallinn\",\"Europe/Tirane\",\"Europe/Ulyanovsk\",\"Europe/Uzhgorod\",\"Europe/Vienna\",\"Europe/Vilnius\",\"Europe/Volgograd\",\"Europe/Warsaw\",\"Europe/Zaporozhye\",\"Europe/Zurich\",\"HST\",\"Indian/Chagos\",\"Indian/Christmas\",\"Indian/Cocos\",\"Indian/Kerguelen\",\"Indian/Mahe\",\"Indian/Maldives\",\"Indian/Mauritius\",\"Indian/Reunion\",\"MET\",\"MST\",\"MST7MDT\",\"PST8PDT\",\"Pacific/Apia\",\"Pacific/Auckland\",\"Pacific/Bougainville\",\"Pacific/Chatham\",\"Pacific/Chuuk\",\"Pacific/Easter\",\"Pacific/Efate\",\"Pacific/Enderbury\",\"Pacific/Fakaofo\",\"Pacific/Fiji\",\"Pacific/Funafuti\",\"Pacific/Galapagos\",\"Pacific/Gambier\",\"Pacific/Guadalcanal\",\"Pacific/Guam\",\"Pacific/Honolulu\",\"Pacific/Kiritimati\",\"Pacific/Kosrae\",\"Pacific/Kwajalein\",\"Pacific/Majuro\",\"Pacific/Marquesas\",\"Pacific/Nauru\",\"Pacific/Niue\",\"Pacific/Norfolk\",\"Pacific/Noumea\",\"Pacific/Pago_Pago\",\"Pacific/Palau\",\"Pacific/Pitcairn\",\"Pacific/Pohnpei\",\"Pacific/Port_Moresby\",\"Pacific/Rarotonga\",\"Pacific/Tahiti\",\"Pacific/Tarawa\",\"Pacific/Tongatapu\",\"Pacific/Wake\",\"Pacific/Wallis\",\"WET\"]\n    \n    // const _getTimezoneData = async () => {\n    //     const options = {\n    //         url: `http://worldtimeapi.org/api/timezone`,\n    //         method: 'GET',\n    //         headers: {\n    //             'Accept': 'application/json',\n    //         }\n    //     }\n    //     timezoneData = await axios(options)\n    // }\n\n    // _getTimezoneData();\n    \n    // const getTimeZones = async () => {\n    //     if(timezoneData && timezoneData.data) return timezoneData.data;\n    //     else {\n    //         await _getTimezoneData();\n    //         return timezoneData;\n    //     } \n    // }\n\n    const getTimeZones = () => {\n        return timezoneData;\n    }\n\n    return {\n        getTimeZones: getTimeZones\n    }\n\n\n})(); \n\nexport default TimeZoneHandler;",{"ruleId":"78","severity":1,"message":"79","line":8,"column":8,"nodeType":"80","messageId":"81","endLine":8,"endColumn":23},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":49,"column":6,"nodeType":"88","endLine":49,"endColumn":12,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":58,"column":8,"nodeType":"88","endLine":58,"endColumn":10,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":16,"column":9,"nodeType":"94","messageId":"95","endLine":23,"endColumn":10},{"ruleId":"96","severity":1,"message":"97","line":53,"column":28,"nodeType":"98","messageId":"99","endLine":53,"endColumn":30},{"ruleId":"92","severity":1,"message":"93","line":43,"column":9,"nodeType":"94","messageId":"95","endLine":62,"endColumn":10},{"ruleId":"96","severity":1,"message":"97","line":116,"column":28,"nodeType":"98","messageId":"99","endLine":116,"endColumn":30},{"ruleId":"78","severity":1,"message":"100","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":13},{"ruleId":"78","severity":1,"message":"101","line":8,"column":8,"nodeType":"80","messageId":"81","endLine":8,"endColumn":23},{"ruleId":"78","severity":1,"message":"102","line":3,"column":10,"nodeType":"80","messageId":"81","endLine":3,"endColumn":19},{"ruleId":"78","severity":1,"message":"102","line":2,"column":10,"nodeType":"80","messageId":"81","endLine":2,"endColumn":19},{"ruleId":"78","severity":1,"message":"103","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":23},{"ruleId":"92","severity":1,"message":"93","line":24,"column":9,"nodeType":"94","messageId":"95","endLine":37,"endColumn":10},{"ruleId":"78","severity":1,"message":"104","line":1,"column":10,"nodeType":"80","messageId":"81","endLine":1,"endColumn":19},{"ruleId":"78","severity":1,"message":"105","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":13},{"ruleId":"78","severity":1,"message":"106","line":64,"column":11,"nodeType":"80","messageId":"81","endLine":64,"endColumn":25},{"ruleId":"78","severity":1,"message":"107","line":2,"column":7,"nodeType":"80","messageId":"81","endLine":2,"endColumn":12},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["108"],"no-negated-in-lhs",["109"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateLoggedInStatus'. Either include it or remove the dependency array.","ArrayExpression",["110"],"React Hook useEffect has a missing dependency: 'animateNextLetter'. Either include it or remove the dependency array.",["111"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'bgImg' is defined but never used.","'ReminderHandler' is defined but never used.","'useEffect' is defined but never used.","'TimeZoneHandler' is defined but never used.","'Component' is defined but never used.","'Login' is defined but never used.","'deleteReminder' is assigned a value but never used.","'axios' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [updateLoggedInStatus, user]",{"range":"116","text":"117"},"Update the dependencies array to be: [animateNextLetter]",{"range":"118","text":"119"},[1214,1220],"[updateLoggedInStatus, user]",[1908,1910],"[animateNextLetter]"]