[{"/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/index.js":"1","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/reportWebVitals.js":"2","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/App.js":"3","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/EntryPage.js":"4","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/Login.js":"5","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/CreateAccount.js":"6","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/HomePage.js":"7","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/LoginHandler.js":"8","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Reminders/ReminderHub.js":"9","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Reminders/NewReminderForm.js":"10","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/ReminderHandler.js":"11","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/TimeZoneHandler.js":"12","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/VerificationHandler.js":"13","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/VerificationHub.js":"14","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Reminders/ActiveReminder.js":"15","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/Scheduler.js":"16","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/AccountHub.js":"17"},{"size":2280,"mtime":1608239666123,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1607231603958,"results":"20","hashOfConfig":"19"},{"size":2130,"mtime":1608151124393,"results":"21","hashOfConfig":"19"},{"size":4141,"mtime":1608131059770,"results":"22","hashOfConfig":"19"},{"size":2254,"mtime":1607960328434,"results":"23","hashOfConfig":"19"},{"size":5492,"mtime":1608076283656,"results":"24","hashOfConfig":"19"},{"size":5901,"mtime":1608237586841,"results":"25","hashOfConfig":"19"},{"size":2813,"mtime":1608147754745,"results":"26","hashOfConfig":"19"},{"size":3061,"mtime":1608239200879,"results":"27","hashOfConfig":"19"},{"size":7554,"mtime":1608239097727,"results":"28","hashOfConfig":"19"},{"size":3414,"mtime":1608222435065,"results":"29","hashOfConfig":"19"},{"size":7747,"mtime":1607960001668,"results":"30","hashOfConfig":"19"},{"size":2435,"mtime":1608147745497,"results":"31","hashOfConfig":"19"},{"size":2391,"mtime":1608147760817,"results":"32","hashOfConfig":"19"},{"size":1491,"mtime":1608222176628,"results":"33","hashOfConfig":"19"},{"size":845,"mtime":1608222099996,"results":"34","hashOfConfig":"19"},{"size":4127,"mtime":1608316706414,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1xfti7i",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"39"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"39"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"39"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/index.js",["85"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\n\n\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// <div>Icons made by <a href=\"https://www.flaticon.com/authors/iconixar\" title=\"iconixar\">iconixar</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n// <div>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n// <div>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n// <div>Icons made by <a href=\"https://www.flaticon.com/authors/bqlqn\" title=\"bqlqn\">bqlqn</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n// <div>Icons made by <a href=\"https://www.flaticon.com/authors/becris\" title=\"Becris\">Becris</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n// <div>Icons made by <a href=\"https://www.flaticon.com/authors/pixelmeetup\" title=\"Pixelmeetup\">Pixelmeetup</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n// <div>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n// <div>Icons made by <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">Smashicons</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n// <div>Icons made by <a href=\"https://www.flaticon.com/authors/pixel-perfect\" title=\"Pixel perfect\">Pixel perfect</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n\n\n\n\n// TODO - add google analytics\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n",["86","87"],"/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/reportWebVitals.js",[],"/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/App.js",["88","89"],"\nimport { useEffect, useState } from \"react\"\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\n\nimport EntryPage from \"./Login/EntryPage.js\"\nimport HomePage from \"./HomePage.js\"\nimport ReminderHub from \"./Reminders/ReminderHub.js\"\n\nimport bgImg from \"../media/coffee-and-map.jpg\"\n\nimport LoginHandler from \"../modules/LoginHandler.js\"\n\n\nimport '../styles/App.css';\nimport ReminderHandler from \"../modules/ReminderHandler.js\"\n\nconst App = () => {\n\n  const [ user, setUser ] = useState(undefined);\n  const [ isUserLoggedIn, setUserLoggedIn ] = useState(false);\n  const [ reminders, setReminders ] = useState(undefined)\n\n  const updateUser = (newUser) => {\n    setUser(newUser)\n  }\n\n  const updateLoggedInStatus = () => {\n    if(user !== undefined) {\n      setUserLoggedIn(true)\n    } else {\n      setUserLoggedIn(false)\n    }\n  }\n\n  const getAllUserReminders = async () => {\n    const rems = await ReminderHandler.getAllReminders()\n\n    console.log(`reminders:`)\n    console.log(rems)\n\n    setReminders(rems)\n  }\n\n  LoginHandler.setUserUpdateCallback(updateUser)\n  ReminderHandler.setUpdateReminderCallback(getAllUserReminders)\n\n  useEffect(() => {\n    updateLoggedInStatus();\n  }, [user])\n\n  useEffect(() => {\n    if(isUserLoggedIn === true) {\n      getAllUserReminders()\n    }\n  }, [isUserLoggedIn])\n\n  \n\n  return (\n    <div className='App' style={{ backgroundImage: `url(${bgImg})` }}>\n      <Router>\n        {(isUserLoggedIn===false) ? <Redirect to='/login' /> : null}\n          <Switch>\n            <Route exact path=\"/\">\n              {(!user || user === {})? <Redirect to='/login' />:<Redirect to='/home' />}\n            </Route>\n            <Route path=\"/login\">\n              {(isUserLoggedIn===true)?<Redirect to='/home'/>:null}\n              <EntryPage />\n            </Route>\n            <Route path=\"/home\">\n              <HomePage user={user} reminders={reminders} />\n            </Route>\n            {/* <Route path=\"/reminders\">\n              <ReminderHub reminders={reminders} />\n            </Route> */}\n\n          </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/EntryPage.js",["90","91"],"\nimport { useState, useEffect } from \"react\"\n\nimport ghIcon from \"../../media/GitHubIconLight.png\"\nimport backIcon from \"../../media/back.png\"\n\nimport \"../../styles/EntryPage.css\"\n\nimport Login from \"./Login.js\"\nimport CreateAccount from \"./CreateAccount.js\"\n\nconst EntryPage = (  ) => {\n\n    const [createAccountOpen, setCreateAccountOpen] = useState(false)\n    const [introText, setIntroText] = useState('');\n    const [stopAnimation, setStopAnimation] = useState(false)\n\n    let fullIntroText = 'Hello, my name is Remi. I can help you schedule text remiders and create checklists. Login or create an account and we can get started!';\n    let introTextPlaceholder = '';\n    let i = 0;\n    const animateNextLetter = (pauseBool) => {\n        if(i<=fullIntroText.length) {\n            setIntroText(introTextPlaceholder)\n            setTimeout(() => {\n                if(!pauseBool) introTextPlaceholder = `${introTextPlaceholder}${fullIntroText[i++]}`\n                else pauseBool = false;\n                if(fullIntroText[i] === '.') pauseBool = true;\n                if(!stopAnimation) animateNextLetter();\n            }, 100)\n        }\n    }\n\n    const createAccount = () => {\n\n        const loginHeader = document.querySelector('.login-main-header')\n        loginHeader.classList.add('create-account')\n\n        const container = document.querySelector('.entry-container-grid')\n        container.classList.remove('alert-message-on')\n        setCreateAccountOpen(true);\n    }\n\n    const closeCreateAccount = () => {\n\n        const loginHeader = document.querySelector('.login-main-header')\n        loginHeader.classList.remove('create-account')\n\n\n        const container = document.querySelector('.entry-container-grid')\n        container.classList.remove('alert-message-on')   \n        setCreateAccountOpen(false);\n    }\n\n    useEffect(() => {\n        animateNextLetter();\n        return () => {\n            setStopAnimation(true)\n        }\n    }, [])\n\n    return (\n        <div className='EntryPage' >\n\n            <div className='entry-center-container'>\n                <div id='intro-text-container'>\n                    <div id='intro-text'>\n                        {introText}\n                    </div>\n                </div>\n\n                <div className={`entry-container-grid ${(!createAccountOpen) ? 'login' : 'create-account'}`}>\n                    {(createAccountOpen)?\n                        <div className='go-back-button-container'>\n                            {/* <button onClick={closeCreateAccount} type='button' className='go-back-button'><i className='material-icons'>arrow_back</i></button> */}\n                            <button onClick={closeCreateAccount} type='button' className='go-back-button'><img id='go-back-image' src={backIcon}></img></button>\n\n                        </div>\n                    :null}\n                    <div className='login-container-header'>\n                        <h2 className=\"login-main-header\"> {(!createAccountOpen)? `login` : `new account`} </h2>\n                    </div>\n\n                    {(createAccountOpen === false) ?\n                        <div className='create-account-closed'>\n                            <Login />\n                            <div className='create-account-container login-container'>\n                                <h3 className='login-header'>Need an account?</h3>\n                                <button onClick={createAccount}> Create Account </button>\n                            </div>\n                        </div>\n                        :\n                        <CreateAccount />\n                    }\n\n                </div>\n            </div>\n\n            <span className='created-by-footer'>Created by\n                <a className='footer-link' href=\"https://josiaheakle.com\" title=\"Josiah Eakle Portfolio\">\n                    Josiah Eakle\n                </a>\n                <a href=\"https://github.com/josiaheakle/reminder-client\" title=\"Github\">\n                    <img className='je-icon' src={ghIcon} alt='GitHub Icon' />\n                </a>\n            </span>\n\n        </div>\n    );\n}\n\nexport default EntryPage;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/Login.js",["92","93"],"import { useState } from \"react\"\nimport LoginHandler from \"../../modules/LoginHandler.js\"\n\nconst Login = (props) => {\n\n    // props \n    //  loginSuccess ()\n    //      parent callback to tell entry page login is complete\n\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const [ alertMessage, setAlertMessage ] = useState('')\n\n\n    const updateValue = (e) => {\n        switch(e.target.id) {\n            case('email-input'):\n                setEmail(e.target.value)\n                break;\n            case('password-input'):\n                setPassword(e.target.value)\n                break;\n        }\n    }\n\n    const onLogin = async (e) => {\n        e.preventDefault();\n        const container = document.querySelector('.entry-container-grid')\n\n        const res = await LoginHandler.loginUser(email, password)\n        console.log(res)\n        if(res.type !== 'VALID') {\n            setAlert(res.message)\n        } else {\n            container.classList.remove = 'alert-message-on'\n            \n        }\n    }\n\n    const setAlert = (str) => {\n        const container = document.querySelector('.entry-container-grid')\n        container.classList.add('alert-message-on')\n        setAlertMessage(str);\n        // const alertMessageDom = document.querySelector('.alert-message')\n        // alertMessageDom.classList.add('mounting')\n        // setTimeout(() => {\n        //     alertMessageDom.classList.remove('mounting')\n        // }, 2000)\n    }\n\n    return(\n        <div>\n            {(alertMessage == '')?null:<div className='alert-message'>{alertMessage}</div>}\n            <form onSubmit={onLogin} className='login-form' >\n                <label htmlFor='email-input'>Email</label>\n                <input className='login-input' onChange={updateValue} id='email-input' name='Email' type='email' autoComplete='email' required={true} ></input>\n                <label htmlFor='password-input'>Password</label>\n                <input className='login-input' onChange={updateValue} id='password-input' name='Password' type='password' autoComplete='password' required={true} ></input>\n                <button type='submit'>Login</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Login/CreateAccount.js",["94","95"],"import { useState, useEffect } from \"react\"\nimport LoginHandler from \"../../modules/LoginHandler.js\"\nimport TimeZoneHandler from \"../../modules/TimeZoneHandler.js\"\n\nconst CreateAccount = (props) => {\n\n    // props \n    //  goBack () \n    //      parent callback when user goes back instead of creating account\n\n    const [ username, setUsername ] = useState('')\n    const [ email, setEmail ] = useState('')\n    const [ phoneNum, setPhoneNum ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const [ passVerify, setPassVerify ] = useState('')\n    const [ time_zone, setTimeZone] = useState('UTC')\n\n\n    const [ alertMessage, setAlertMessage ] = useState('')\n\n    const passRequirements = (pass) => {\n        // Requirements - must have at least one uppercase, one lowercase, and one number\n\n        let hasUpper = false, hasLower = false, hasNum = false;\n        for (let i=0; i<pass.length; i++) {\n            // console.log(pass[i])\n\n            let code = pass.charCodeAt(i)\n\n            if(pass[i] > '0' && pass[i] < '9') hasNum = true;\n            else if(code >= 65 && code <= 90) hasUpper = true;\n            else if(code >= 97 && code <= 122) hasLower = true;\n\n\n        }\n\n        if(hasUpper && hasLower && hasNum) return true\n        else return false\n\n    }\n\n    const updateValue = (e) => {\n        switch(e.target.id) {\n            case('email-input'):\n                setEmail(e.target.value)\n                break;\n            case('password-input'):\n                setPassword(e.target.value)\n                break;\n            case('name-input'):\n                setUsername(e.target.value)    \n                break;\n            case('password-verify-input'):\n                setPassVerify(e.target.value)\n                break;\n            case('phone-input'):\n                setPhoneNum(e.target.value)\n                break;\n            case('time-zone-input'):\n                setTimeZone(e.target.options[e.target.selectedIndex].text)\n\n        }\n    }\n\n    const onCreateAccount = async (e) => {\n        e.preventDefault();\n\n        if(password !== passVerify) {\n            setAlert('Passwords do not match, please try again.')\n        } else if (password.length<8) {\n            setAlert('Password must be at least 8 characters.')\n        } else if (!passRequirements(password)) {\n            setAlert('Password must have at least one uppercase, one lowercase, and one number.')\n        }else {\n            const res = await LoginHandler.createUser(email, phoneNum, username, password, time_zone)\n            if(res.type !== 'VALID') {\n                setAlert(res.message)\n            } else {\n                setAlert('')  \n            }\n        }\n    }\n\n    const setAlert = (str) => {\n        setAlertMessage(str);\n        const container = document.querySelector('.entry-container-grid')        \n        if(container) container.classList.add('alert-message-on')\n        setAlertMessage(str);\n        const alertMessageDom = document.querySelector('.alert-message')\n        if(alertMessageDom) {\n            alertMessageDom.classList.add('mounting')\n            setTimeout(() => {\n                alertMessageDom.classList.remove('mounting')\n            }, 2000)\n        }\n    }\n\n        const importTimeZones = async () => {\n        const timeZoneSelector = document.getElementById('time-zone-input')\n        let timezones = await TimeZoneHandler.getTimeZones()\n        timezones.forEach(tz => {\n            const op = document.createElement('option')\n            op.value = tz\n            op.textContent = tz\n            timeZoneSelector.appendChild(op)\n        })\n\n    }\n\n    useEffect(() => {\n        importTimeZones()\n    }, [])\n\n    return(\n        <div>\n            {(alertMessage == '')?null:<div className='alert-message'>{alertMessage}</div>}\n            <form onSubmit={onCreateAccount} className='login-form create-account-form'>\n                <label id='name-input-label' htmlFor='name-input'>Name</label>\n                <input className='login-input' onChange={updateValue} id='name-input' name='Display Name' type='text' autoComplete='username' required={true}></input>\n                <label htmlFor='email-input'>Email</label>\n                <input className='login-input' onChange={updateValue} id='email-input' name='Email' type='email' autoComplete='email' required={true}></input>\n                <label htmlFor='phone-input'>Phone Number</label>\n                <input className='login-input' onChange={updateValue} id='phone-input' name='Phone Number' type='tel' autoComplete='tel' required={true}></input>\n                <label htmlFor='time-zone-input'> Time Zone </label>\n                <select className='login-input' onChange={updateValue} name='Time Zone' id='time-zone-input'>\n                    <option value='UTC'> --select timezone-- </option>\n                </select>\n                <label htmlFor='password-input'>Password</label>\n                <input className='login-input' onChange={updateValue} id='password-input' name='Password' type='password' autoComplete='password' required={true}></input>\n                <label htmlFor='password-verify-input'>Verify Password </label>\n                <input className='login-input' onChange={updateValue} id='password-verify-input' name='Password Verification' type='password' autoComplete='off' required={true}></input>\n                <button type='submit'>Submit</button>\n            </form>\n        </div>\n    );\n}\n\nexport default CreateAccount;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/HomePage.js",["96","97","98","99","100","101","102","103"],"// import LoginHandler from \"../modules/LoginHandler.js\"\nimport { Link } from \"react-router-dom\"\n\nimport { useState, useEffect } from \"react\"\n\nimport '../styles/HomePage.css'\nimport VerificationHandler from \"../modules/VerificationHandler.js\"\nimport VerificationHub from \"./VerificationHub.js\"\nimport ReminderHub from './Reminders/ReminderHub.js'\nimport AccountHub from './AccountHub.js'\n\nimport reminderIcon from \"../media/reminders.png\"\nimport accountIcon from \"../media/user_transparent.png\"\nimport ghIcon from \"../media/GitHubIconLight.png\"\n\n\nconst HomePage = (props) => {\n\n    // props - user, reminders\n\n    const [introText, setIntroText] = useState('');\n    const [stopAnimation, setStopAnimation] = useState(false);\n    const [isUserVerified, setUserVerified] = useState(false);\n\n    const [selectedPage, setSelectedPage] = useState('reminders') // reminders, account\n\n    let fullIntroText = '';\n\n    const updateIntroText = () => {\n        if (props.user) {\n            setUserVerified((!!props.user.phone_number_verified && !!props.user.email_verified))\n            if (!props.user.phone_number_verified && !props.user.email_verified) {\n                fullIntroText = `Welcome${(props.user) ? `, ${props.user.username}!` : '!'} Now before we can get started, you will need to verify your phone number and email or I won't be able to send any reminders. Click the buttons below to begin the verification process.`;\n            } else if (!props.user.phone_number_verified && props.user.email_verified) {\n                fullIntroText = `Welcome${(props.user) ? `, ${props.user.username}!` : '!'} Before I can send any text reminders, you will need to verify your phone number. Press the button below to start.`;\n            } else if (props.user.phone_number_verified && !props.user.email_verified) {\n                fullIntroText = `Welcome${(props.user) ? `, ${props.user.username}!` : '!'} Before I can send any email reminders, you will need to verify your email. Press the button below to start.`;\n            } else {\n                fullIntroText = `Welcome${(props.user) ? `, ${props.user.username}!` : '!'}`;\n            }\n        } else {\n            fullIntroText = `Welcome!`;\n        }\n    }\n\n    let introTextPlaceholder = '';\n    let i = 0;\n    const animateNextLetter = (pauseBool) => {\n        if (i <= fullIntroText.length) {\n            setIntroText(introTextPlaceholder)\n            setTimeout(() => {\n                if (!pauseBool) introTextPlaceholder = `${introTextPlaceholder}${fullIntroText[i++]}`\n                else pauseBool = false;\n                if (fullIntroText[i] === '.') pauseBool = true;\n                if (!stopAnimation) animateNextLetter();\n            }, 80)\n        }\n    }\n\n    const changePage = (e) => {\n\n        console.log(`Changing Page: `, e.target)\n\n        switch(e.target.id) {\n            case('page-selection-reminders'):\n                setSelectedPage('reminders')\n\n                break;\n            case('page-selection-account'):\n                setSelectedPage('account')\n                break;\n        }\n    }\n\n    // const sendVerificationText = () => {\n    //     const phoneNum = props.user.phone_number;\n    //     VerificationHandler.sendVerificationText(phoneNum)\n    // }\n\n    // const sendVerificationEmail = () => {\n\n    // }\n\n    // useEffect(() => {\n    //     console.log(`is user verified? ${isUserVerified}` )\n    // }, [isUserVerified])\n\n    useEffect(() => {\n\n        const reminderSelection = document.getElementById('page-selection-reminders')\n        const accountSelection = document.getElementById('page-selection-account')\n\n        switch(selectedPage) {\n            case('reminders'):\n                accountSelection.classList.remove('selected')\n                reminderSelection.classList.add('selected')\n                break;\n            case('account'):\n                accountSelection.classList.add('selected')\n                reminderSelection.classList.remove('selected')\n                break;\n        }\n\n    }, [selectedPage])\n\n    useEffect(() => {\n        updateIntroText();\n        return () => {\n            setStopAnimation(true)\n        }\n    }, [])\n\n    useEffect(() => {\n        if (fullIntroText !== '') {\n            animateNextLetter();\n        }\n    }, [introText])\n\n    return (\n        <div className=\"HomePage\">\n\n            <div className='visual-container'>\n\n                <div className='remi-text-container'>\n                    {introText}\n                </div>\n\n                {(isUserVerified === false) ? <VerificationHub user={props.user} /> : null}\n\n\n                <div className='page-selector'>\n                    <div onClick={changePage} title='Reminders' className='page-selection selected' id='page-selection-reminders'>\n                        <img className='page-selection-image' src={reminderIcon} id='page-selection-reminders' />\n                    </div>\n                    <div onClick={changePage} title='Account' className='page-selection' id='page-selection-account'>\n                        <img className='page-selection-image' src={accountIcon} id='page-selection-account' />\n                    </div>\n                </div>\n                \n                {(selectedPage==='reminders')?<ReminderHub user={props.user} reminders={props.reminders} /> : (selectedPage==='account')? <AccountHub user={props.user} /> :null}\n                \n\n            </div>\n\n            <span className='created-by-footer'>Created by\n                <a className='footer-link' href=\"https://josiaheakle.com\" title=\"Josiah Eakle Portfolio\">\n                    Josiah Eakle\n                </a>\n                <a href=\"https://github.com/josiaheakle/reminder-client\" title=\"Github\">\n                    <img className='je-icon' src={ghIcon} alt='GitHub Icon' />\n                </a>\n            </span>\n\n        </div>\n    );\n}\n\nexport default HomePage;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/LoginHandler.js",[],"/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Reminders/ReminderHub.js",["104"],"\n\nimport { useEffect, useState } from \"react\";\nimport NewReminderForm from \"./NewReminderForm.js\"\nimport ActiveReminder from \"./ActiveReminder.js\"\n\nimport '../../styles/ReminderHub.css'\nimport ReminderHandler from \"../../modules/ReminderHandler.js\";\n\nconst ReminderHub = (props) => {\n\n    // props - user, reminders\n\n    const [ reminderToUpdate, setReminderToUpdate ] = useState(undefined)\n    const [ verifyDelete, setVerifyDelete ] = useState(false)\n    const [ reminderToDelete, setReminderToDelete ] = useState(undefined)\n    const [ editClicked, setEditClicked ] = useState(false)\n\n    // selectedpage - reminders, account, settings\n\n    // useEffect(() => {\n    //     if(props.reminders) {\n    //         setReminders(props.reminders)\n    //     }\n    // }, [])\n\n    const editReminder = (rem) => {\n        setReminderToUpdate(rem)\n        setEditClicked(true)\n        setTimeout(() => {\n            setEditClicked(false)\n        }, 200)\n    }\n\n    const deleteReminder = (rem) => {\n        setReminderToDelete(rem)\n        setVerifyDelete(true)\n    }\n\n    const yesDelete = () => {\n        ReminderHandler.deleteReminder(reminderToDelete._id)\n        // setReminderToUpdate(undefined)\n        \n        reminderDoneEditing()\n        setReminderToDelete(undefined)\n        setVerifyDelete(false)\n    }\n\n    const noDelete = () => {\n        setReminderToDelete(undefined)\n        reminderDoneEditing()\n        // setReminderToUpdate(undefined)\n        setVerifyDelete(false)\n    }\n \n    const reminderDoneEditing = () => {\n        setReminderToUpdate(undefined)\n        setEditClicked(true)\n        setTimeout(() => {\n            setEditClicked(false)\n        }, 200)\n    }\n\n\n    return(\n        <div className='ReminderHub'>\n\n            {(verifyDelete === true)? \n            <div className='verify-delete-modal-background'>\n                <div className='verify-delete-modal'>\n                    <div className='verify-delete-modal-header'> Are you sure you want to delete this reminder? </div>\n\n                    <div className='verify-delete-modal-button-container'>\n                        <button onClick={yesDelete} className='verify-delete-modal-button' id='yes-delete-button'> Delete </button>\n                        <button onClick={noDelete} className='verify-delete-modal-button' id='no-delete-button'> Cancel </button>\n                    </div>\n                </div> \n            </div>\n            :null}\n\n            <div className='all-user-reminders'>\n                <div className='all-user-reminders-header'> Active Reminders </div>\n\n                {(props.reminders) ? props.reminders.map((r,i) => {\n                    return <ActiveReminder editReminder={editReminder} deleteReminder={deleteReminder} key={i} reminder={r} />\n                }):null}\n\n            </div>\n\n            {(reminderToUpdate !== undefined) ? <NewReminderForm reminder={reminderToUpdate} refresh={editClicked} submitted={reminderDoneEditing} cancelEdit={verifyDelete} /> : <NewReminderForm />}\n\n        </div>\n    );\n}\n\nexport default ReminderHub;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Reminders/NewReminderForm.js",["105","106","107","108","109","110"],"import { useEffect, useState } from \"react\";\nimport ReminderHandler from \"../../modules/ReminderHandler.js\"\nimport TimeZoneHandler from \"../../modules/TimeZoneHandler.js\"\nimport ReminderHub from \"./ReminderHub.js\";\n\nimport cancelIcon from \"../../media/error.png\"\n\nconst moment = require('moment')\n\n    /*\n  const newReminder = {\n    title: req.body.title,\n    start_date: req.body.startdate,\n    frequency: req.body.frequency,\n    text_string: req.body.description || undefined,\n    link: req.body.link || undefined\n  }\n    */\n\nconst NewReminderForm = (props) => {\n\n    // props - reminder = object (IF YOU ARE EDITING A REMINDER), refresh = bool, if true refresh edit values, submitted: callback(), cancelEdit = bool, if true cancelEdit\n\n    const [ editingReminder, setEditingReminder ] = useState(false)\n\n    const [ title, setTitle ] = useState(undefined)\n    const [ start_date, setStartDate ] = useState(undefined)\n    const [ frequency, setFrequency ] = useState('Once')\n    const [ reminderType, setReminderType ] = useState('text')\n    const [ text, setTextString ] = useState(undefined)\n\n    const updateValue = (e) => {\n        switch(e.target.id) {\n            case('title-input'):\n                setTitle(e.target.value)\n                break;\n            case('text-string-input'):\n                setTextString(e.target.value)\n                break;\n            case('start-date-input'):\n                setStartDate(e.target.value)    \n                break;\n            case('frequency-input'):\n                setFrequency(e.target.options[e.target.selectedIndex].text)\n                break;\n            case('reminder-type-input'):\n                setReminderType(e.target.options[e.target.selectedIndex].text)\n                break;\n        }\n    }\n\n    const submitForm = async (e) => {\n        e.preventDefault();\n        e.target.reset()\n        if(!props.reminder) {\n            const res = await ReminderHandler.createReminder({\n                title: title,\n                start_date: start_date,\n                freq: frequency,\n                text: text,\n                type: reminderType\n            })\n            console.log(res)\n        } else {\n            props.submitted()\n\n            const newRem = {\n                title: title,\n                start_date: start_date,\n                freq: frequency,\n                text: text,\n                type: reminderType\n            }\n\n            const res = await ReminderHandler.editReminder(props.reminder._id, newRem)\n            setEditingReminder(false)\n            console.log(res)\n            ReminderHandler.updateReminders()\n        }\n    }\n\n    const updateEditValues = () => {\n\n        const titleInput = document.getElementById('title-input')\n        const textInput = document.getElementById('text-string-input')\n        const dateInput = document.getElementById('start-date-input')\n        const freqInput = document.getElementById('frequency-input')\n        const typeInput = document.getElementById('reminder-type-input')\n\n        const title = props.reminder.title || ''\n        const text = props.reminder.text || ''\n        const date = props.reminder.start_date || ''\n        const freq = props.reminder.freq || 'Once'\n        const type = props.reminder.type || 'Text'\n\n        setTitle(title)\n        setTextString(text)\n        setStartDate(date)\n        setFrequency(freq)\n        setReminderType(type)\n\n        titleInput.value = title\n        textInput.value = text\n        dateInput.value = moment(date).format(\"YYYY-MM-DDTHH:mm:ss\")\n        freqInput.value = freq\n        typeInput.value = type\n\n    }\n\n    const cancelEdit = () => {\n\n        const reminderForm = document.querySelector('.new-reminder-form')\n        reminderForm.reset()\n\n        setEditingReminder(false)\n        props.submitted()\n\n    }\n\n\n\n    useEffect(() => {\n        if(editingReminder === true) updateEditValues()\n    }, [editingReminder])\n\n    useEffect(() => {\n        if(props.reminder) {\n            setEditingReminder(true)\n        } else {\n            setEditingReminder(false)\n        }   \n        if(props.refresh) {\n            if(props.refresh === true) updateEditValues()\n        }\n        if(props.cancelEdit){\n            if(props.cancelEdit === true) cancelEdit()\n        }\n\n    }, [props])\n\n    return (\n        <div className='NewReminderForm'>\n            {(editingReminder===true)?\n\n                <div className='new-reminder-form-header'> \n                    <span className='form-header-text'> Editing Reminder </span>\n                    <div className='new-reminder-button-container'>\n                        <button onClick={cancelEdit} className='new-reminder-icon-button' > \n                            <img className='new-reminder-icon' src={cancelIcon} /> \n                        </button>\n                    </div>\n                </div>\n            :\n                <div className='new-reminder-form-header'> \n                    <span className='form-header-text'> New Reminder </span>\n                </div>\n            }\n            <form className='new-reminder-form' onSubmit={submitForm}>\n                <label className='new-reminder-label' id='title-input-label' htmlFor='name-input'>Title</label>\n                <input className='new-reminder-input' onChange={updateValue} id='title-input' name='Title' type='text' required={true}>\n                </input>\n                <label className='new-reminder-label' htmlFor='text-string-input'>Reminder</label>\n                <textarea className='new-reminder-input large' onChange={updateValue} id='text-string-input' name='Description' type='text' required={false}>\n                </textarea>\n                <label className='new-reminder-label' htmlFor='start-date-input'>Date</label>\n                <input className='new-reminder-input' onChange={updateValue} id='start-date-input' name='Start Date' type='datetime-local' required={true}>\n                </input>\n                <div className='align-horizontal'>\n                    <div className='align-vertical'>\n                        <label className='new-reminder-label' htmlFor='frequency-input'>Frequency</label>\n                        <select className='new-reminder-input small' onChange={updateValue} name='Frequency' id='frequency-input' required={true}>\n                            <option value='Once'>Once</option>\n                            <option value='Daily'>Daily</option>\n                            <option value='Weekly'>Weekly</option>\n                            <option value='Bi-Weekly'>Bi-Weekly</option>\n                            <option value='Monthly'>Monthly</option>\n                            <option value='Yearly'>Annually</option>\n                        </select>\n                    </div>\n                    <div className='align-vertical'>\n                        <label className='new-reminder-label' htmlFor='reminder-type-input'>Type</label>\n                        <select className='new-reminder-input small' onChange={updateValue} name='Reminder Type' id='reminder-type-input' required={true}>\n                            <option value='Text'>Text</option>\n                            <option value='Email'>Email</option>\n                            <option value='Both'>Both</option>\n                        </select>\n                    </div>\n                </div>\n\n                \n                <button className='new-reminder-input button' type='submit'> Submit </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewReminderForm;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/ReminderHandler.js",["111","112"],"import { Component } from \"react\";\nimport Login from \"../components/Login/Login.js\";\nimport LoginHandler from \"./LoginHandler.js\"\nimport Scheduler from \"./Scheduler.js\"\n\nconst axios = require('axios')\nrequire('dotenv').config();\n\n\n\nconst ReminderHandler = (() => {\n\n    const apiUrl = process.env.REACT_APP_API_URL;\n\n    /*\n  const newReminder = {\n    title: req.body.title,\n    startdate: req.body.startdate,\n    frequency: req.body.frequency,\n    description: req.body.description || undefined,\n    link: req.body.link || undefined\n  }\n    */\n\n    let _callback = undefined;\n\n    const setUpdateReminderCallback = (callback) => {\n        _callback = callback\n    }\n\n    const updateReminders = () => {\n        _callback()\n    }\n\n    const createReminder = async (reminderObj) => {\n\n        // console.log(`REMINDER:`)\n        // console.log(reminderObj)\n\n        const currentUser = LoginHandler.getCurrentUser()\n        // console.log(`userId: ${currentUser._id}`)\n        const options = {\n            url: `${apiUrl}/reminder/new`,\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json;charset=UTF-8'\n            },\n            data: {            \n                'title': reminderObj.title,\n                'start_date': reminderObj.start_date,\n                'freq': reminderObj.freq,\n                'text': reminderObj.text,\n                'time_zone': currentUser.time_zone,\n                'user': currentUser._id\n            }\n        }\n\n        \n        const res = await axios(options)\n        updateReminders()\n        return res\n    }\n\n    const deleteReminder = async (id) => {\n        const options = {\n            url: `${apiUrl}/reminder/delete/${id}`,\n            method: 'GET'\n        }\n        const res = await axios(options)\n        updateReminders()\n        return res.data\n    }\n\n    const editReminder = async (id, reminderObj) => {\n\n        const currentUser = LoginHandler.getCurrentUser()\n\n        const options = {\n            url: `${apiUrl}/reminder/update/${id}`,\n            method: 'POST',\n            headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8'\n            },\n            data: {            \n                'title': reminderObj.title,\n                'start_date': reminderObj.start_date,\n                'next_date': reminderObj.next_date,\n                'freq': reminderObj.freq,\n                'text': reminderObj.text,\n                'time_zone': currentUser.time_zone,\n                'user': currentUser._id\n            }\n        }\n\n        const res = await axios(options)\n        updateReminders()\n        return res\n    }\n\n    const getAllReminders = async () => {\n\n        const currentUser =  LoginHandler.getCurrentUser()\n\n        const options = {\n            url: `${apiUrl}/reminder/all/${currentUser._id}`,\n            method: 'GET'\n        }\n        const res = await axios(options)\n\n        Scheduler.scheduleAllUpdates(res.data)\n\n        return res.data\n        \n\n    }\n\n    return {\n        createReminder: createReminder,\n        editReminder: editReminder,\n        deleteReminder: deleteReminder,\n        getAllReminders: getAllReminders,\n        updateReminders: updateReminders,\n        setUpdateReminderCallback: setUpdateReminderCallback,\n    }\n\n})(); \n\nexport default ReminderHandler;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/TimeZoneHandler.js",["113"],"\nconst axios = require('axios')\n\nconst TimeZoneHandler = (() => {\n\n    let timezoneData = [\"Africa/Abidjan\",\"Africa/Accra\",\"Africa/Algiers\",\"Africa/Bissau\",\"Africa/Cairo\",\"Africa/Casablanca\",\"Africa/Ceuta\",\"Africa/El_Aaiun\",\"Africa/Johannesburg\",\"Africa/Juba\",\"Africa/Khartoum\",\"Africa/Lagos\",\"Africa/Maputo\",\"Africa/Monrovia\",\"Africa/Nairobi\",\"Africa/Ndjamena\",\"Africa/Sao_Tome\",\"Africa/Tripoli\",\"Africa/Tunis\",\"Africa/Windhoek\",\"America/Adak\",\"America/Anchorage\",\"America/Araguaina\",\"America/Argentina/Buenos_Aires\",\"America/Argentina/Catamarca\",\"America/Argentina/Cordoba\",\"America/Argentina/Jujuy\",\"America/Argentina/La_Rioja\",\"America/Argentina/Mendoza\",\"America/Argentina/Rio_Gallegos\",\"America/Argentina/Salta\",\"America/Argentina/San_Juan\",\"America/Argentina/San_Luis\",\"America/Argentina/Tucuman\",\"America/Argentina/Ushuaia\",\"America/Asuncion\",\"America/Atikokan\",\"America/Bahia\",\"America/Bahia_Banderas\",\"America/Barbados\",\"America/Belem\",\"America/Belize\",\"America/Blanc-Sablon\",\"America/Boa_Vista\",\"America/Bogota\",\"America/Boise\",\"America/Cambridge_Bay\",\"America/Campo_Grande\",\"America/Cancun\",\"America/Caracas\",\"America/Cayenne\",\"America/Chicago\",\"America/Chihuahua\",\"America/Costa_Rica\",\"America/Creston\",\"America/Cuiaba\",\"America/Curacao\",\"America/Danmarkshavn\",\"America/Dawson\",\"America/Dawson_Creek\",\"America/Denver\",\"America/Detroit\",\"America/Edmonton\",\"America/Eirunepe\",\"America/El_Salvador\",\"America/Fort_Nelson\",\"America/Fortaleza\",\"America/Glace_Bay\",\"America/Goose_Bay\",\"America/Grand_Turk\",\"America/Guatemala\",\"America/Guayaquil\",\"America/Guyana\",\"America/Halifax\",\"America/Havana\",\"America/Hermosillo\",\"America/Indiana/Indianapolis\",\"America/Indiana/Knox\",\"America/Indiana/Marengo\",\"America/Indiana/Petersburg\",\"America/Indiana/Tell_City\",\"America/Indiana/Vevay\",\"America/Indiana/Vincennes\",\"America/Indiana/Winamac\",\"America/Inuvik\",\"America/Iqaluit\",\"America/Jamaica\",\"America/Juneau\",\"America/Kentucky/Louisville\",\"America/Kentucky/Monticello\",\"America/La_Paz\",\"America/Lima\",\"America/Los_Angeles\",\"America/Maceio\",\"America/Managua\",\"America/Manaus\",\"America/Martinique\",\"America/Matamoros\",\"America/Mazatlan\",\"America/Menominee\",\"America/Merida\",\"America/Metlakatla\",\"America/Mexico_City\",\"America/Miquelon\",\"America/Moncton\",\"America/Monterrey\",\"America/Montevideo\",\"America/Nassau\",\"America/New_York\",\"America/Nipigon\",\"America/Nome\",\"America/Noronha\",\"America/North_Dakota/Beulah\",\"America/North_Dakota/Center\",\"America/North_Dakota/New_Salem\",\"America/Nuuk\",\"America/Ojinaga\",\"America/Panama\",\"America/Pangnirtung\",\"America/Paramaribo\",\"America/Phoenix\",\"America/Port-au-Prince\",\"America/Port_of_Spain\",\"America/Porto_Velho\",\"America/Puerto_Rico\",\"America/Punta_Arenas\",\"America/Rainy_River\",\"America/Rankin_Inlet\",\"America/Recife\",\"America/Regina\",\"America/Resolute\",\"America/Rio_Branco\",\"America/Santarem\",\"America/Santiago\",\"America/Santo_Domingo\",\"America/Sao_Paulo\",\"America/Scoresbysund\",\"America/Sitka\",\"America/St_Johns\",\"America/Swift_Current\",\"America/Tegucigalpa\",\"America/Thule\",\"America/Thunder_Bay\",\"America/Tijuana\",\"America/Toronto\",\"America/Vancouver\",\"America/Whitehorse\",\"America/Winnipeg\",\"America/Yakutat\",\"America/Yellowknife\",\"Antarctica/Casey\",\"Antarctica/Davis\",\"Antarctica/DumontDUrville\",\"Antarctica/Macquarie\",\"Antarctica/Mawson\",\"Antarctica/Palmer\",\"Antarctica/Rothera\",\"Antarctica/Syowa\",\"Antarctica/Troll\",\"Antarctica/Vostok\",\"Asia/Almaty\",\"Asia/Amman\",\"Asia/Anadyr\",\"Asia/Aqtau\",\"Asia/Aqtobe\",\"Asia/Ashgabat\",\"Asia/Atyrau\",\"Asia/Baghdad\",\"Asia/Baku\",\"Asia/Bangkok\",\"Asia/Barnaul\",\"Asia/Beirut\",\"Asia/Bishkek\",\"Asia/Brunei\",\"Asia/Chita\",\"Asia/Choibalsan\",\"Asia/Colombo\",\"Asia/Damascus\",\"Asia/Dhaka\",\"Asia/Dili\",\"Asia/Dubai\",\"Asia/Dushanbe\",\"Asia/Famagusta\",\"Asia/Gaza\",\"Asia/Hebron\",\"Asia/Ho_Chi_Minh\",\"Asia/Hong_Kong\",\"Asia/Hovd\",\"Asia/Irkutsk\",\"Asia/Jakarta\",\"Asia/Jayapura\",\"Asia/Jerusalem\",\"Asia/Kabul\",\"Asia/Kamchatka\",\"Asia/Karachi\",\"Asia/Kathmandu\",\"Asia/Khandyga\",\"Asia/Kolkata\",\"Asia/Krasnoyarsk\",\"Asia/Kuala_Lumpur\",\"Asia/Kuching\",\"Asia/Macau\",\"Asia/Magadan\",\"Asia/Makassar\",\"Asia/Manila\",\"Asia/Nicosia\",\"Asia/Novokuznetsk\",\"Asia/Novosibirsk\",\"Asia/Omsk\",\"Asia/Oral\",\"Asia/Pontianak\",\"Asia/Pyongyang\",\"Asia/Qatar\",\"Asia/Qostanay\",\"Asia/Qyzylorda\",\"Asia/Riyadh\",\"Asia/Sakhalin\",\"Asia/Samarkand\",\"Asia/Seoul\",\"Asia/Shanghai\",\"Asia/Singapore\",\"Asia/Srednekolymsk\",\"Asia/Taipei\",\"Asia/Tashkent\",\"Asia/Tbilisi\",\"Asia/Tehran\",\"Asia/Thimphu\",\"Asia/Tokyo\",\"Asia/Tomsk\",\"Asia/Ulaanbaatar\",\"Asia/Urumqi\",\"Asia/Ust-Nera\",\"Asia/Vladivostok\",\"Asia/Yakutsk\",\"Asia/Yangon\",\"Asia/Yekaterinburg\",\"Asia/Yerevan\",\"Atlantic/Azores\",\"Atlantic/Bermuda\",\"Atlantic/Canary\",\"Atlantic/Cape_Verde\",\"Atlantic/Faroe\",\"Atlantic/Madeira\",\"Atlantic/Reykjavik\",\"Atlantic/South_Georgia\",\"Atlantic/Stanley\",\"Australia/Adelaide\",\"Australia/Brisbane\",\"Australia/Broken_Hill\",\"Australia/Currie\",\"Australia/Darwin\",\"Australia/Eucla\",\"Australia/Hobart\",\"Australia/Lindeman\",\"Australia/Lord_Howe\",\"Australia/Melbourne\",\"Australia/Perth\",\"Australia/Sydney\",\"CET\",\"CST6CDT\",\"EET\",\"EST\",\"EST5EDT\",\"Etc/GMT\",\"Etc/GMT+1\",\"Etc/GMT+10\",\"Etc/GMT+11\",\"Etc/GMT+12\",\"Etc/GMT+2\",\"Etc/GMT+3\",\"Etc/GMT+4\",\"Etc/GMT+5\",\"Etc/GMT+6\",\"Etc/GMT+7\",\"Etc/GMT+8\",\"Etc/GMT+9\",\"Etc/GMT-1\",\"Etc/GMT-10\",\"Etc/GMT-11\",\"Etc/GMT-12\",\"Etc/GMT-13\",\"Etc/GMT-14\",\"Etc/GMT-2\",\"Etc/GMT-3\",\"Etc/GMT-4\",\"Etc/GMT-5\",\"Etc/GMT-6\",\"Etc/GMT-7\",\"Etc/GMT-8\",\"Etc/GMT-9\",\"Etc/UTC\",\"Europe/Amsterdam\",\"Europe/Andorra\",\"Europe/Astrakhan\",\"Europe/Athens\",\"Europe/Belgrade\",\"Europe/Berlin\",\"Europe/Brussels\",\"Europe/Bucharest\",\"Europe/Budapest\",\"Europe/Chisinau\",\"Europe/Copenhagen\",\"Europe/Dublin\",\"Europe/Gibraltar\",\"Europe/Helsinki\",\"Europe/Istanbul\",\"Europe/Kaliningrad\",\"Europe/Kiev\",\"Europe/Kirov\",\"Europe/Lisbon\",\"Europe/London\",\"Europe/Luxembourg\",\"Europe/Madrid\",\"Europe/Malta\",\"Europe/Minsk\",\"Europe/Monaco\",\"Europe/Moscow\",\"Europe/Oslo\",\"Europe/Paris\",\"Europe/Prague\",\"Europe/Riga\",\"Europe/Rome\",\"Europe/Samara\",\"Europe/Saratov\",\"Europe/Simferopol\",\"Europe/Sofia\",\"Europe/Stockholm\",\"Europe/Tallinn\",\"Europe/Tirane\",\"Europe/Ulyanovsk\",\"Europe/Uzhgorod\",\"Europe/Vienna\",\"Europe/Vilnius\",\"Europe/Volgograd\",\"Europe/Warsaw\",\"Europe/Zaporozhye\",\"Europe/Zurich\",\"HST\",\"Indian/Chagos\",\"Indian/Christmas\",\"Indian/Cocos\",\"Indian/Kerguelen\",\"Indian/Mahe\",\"Indian/Maldives\",\"Indian/Mauritius\",\"Indian/Reunion\",\"MET\",\"MST\",\"MST7MDT\",\"PST8PDT\",\"Pacific/Apia\",\"Pacific/Auckland\",\"Pacific/Bougainville\",\"Pacific/Chatham\",\"Pacific/Chuuk\",\"Pacific/Easter\",\"Pacific/Efate\",\"Pacific/Enderbury\",\"Pacific/Fakaofo\",\"Pacific/Fiji\",\"Pacific/Funafuti\",\"Pacific/Galapagos\",\"Pacific/Gambier\",\"Pacific/Guadalcanal\",\"Pacific/Guam\",\"Pacific/Honolulu\",\"Pacific/Kiritimati\",\"Pacific/Kosrae\",\"Pacific/Kwajalein\",\"Pacific/Majuro\",\"Pacific/Marquesas\",\"Pacific/Nauru\",\"Pacific/Niue\",\"Pacific/Norfolk\",\"Pacific/Noumea\",\"Pacific/Pago_Pago\",\"Pacific/Palau\",\"Pacific/Pitcairn\",\"Pacific/Pohnpei\",\"Pacific/Port_Moresby\",\"Pacific/Rarotonga\",\"Pacific/Tahiti\",\"Pacific/Tarawa\",\"Pacific/Tongatapu\",\"Pacific/Wake\",\"Pacific/Wallis\",\"WET\"]\n    \n    // const _getTimezoneData = async () => {\n    //     const options = {\n    //         url: `http://worldtimeapi.org/api/timezone`,\n    //         method: 'GET',\n    //         headers: {\n    //             'Accept': 'application/json',\n    //         }\n    //     }\n    //     timezoneData = await axios(options)\n    // }\n\n    // _getTimezoneData();\n    \n    // const getTimeZones = async () => {\n    //     if(timezoneData && timezoneData.data) return timezoneData.data;\n    //     else {\n    //         await _getTimezoneData();\n    //         return timezoneData;\n    //     } \n    // }\n\n    const getTimeZones = () => {\n        return timezoneData;\n    }\n\n    return {\n        getTimeZones: getTimeZones\n    }\n\n\n})(); \n\nexport default TimeZoneHandler;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/VerificationHandler.js",["114","115"],"import LoginHandler from './LoginHandler';\n\nconst axios = require('axios')\nrequire('dotenv').config();\n\n\nconst VerificationHandler = (() => {\n\n    let _textID = undefined\n    let _emailID = undefined\n\n    const checkTextVerification = async (code) => {\n\n        const userId = LoginHandler.getCurrentUser()._id\n\n        const options = {\n            url: `${process.env.REACT_APP_API_URL}/verify/code`,\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json;charset=UTF-8'\n            },\n            data: {\n                id: _textID,\n                userId: userId,\n                code: code\n            }\n        }\n\n        try {\n            const res = await axios(options)\n            // console.log(`(VERIFICATION HANDLER checkVerificationText) axios res:`)\n            // console.log(res)\n            if(res.status !== 200) {\n                throw 'Status code not 200'\n            } \n            else {\n                LoginHandler.updateUserVerificationInfo()\n                return true\n            }\n        } catch (err) {\n            console.log(err)\n            return false\n        }\n\n    }\n\n    const sendVerificationText = async (phoneNum) => {\n        // Calls backend text verification\n        // rsets _textID as verification id\n\n        console.log(`Sending verification text`)\n\n        const options = {\n            url: `${process.env.REACT_APP_API_URL}/verify/number/${phoneNum}`,\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json'\n            }\n        }\n\n        try {\n            const res = await axios(options)\n            // console.log(`(VERIFICATION HANDLER sendVerificationText) axios res:`)\n            // console.log(res)\n            if(res.status !== 200) throw 'Error validating phone number'\n            else _textID = res.data\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n\n    const sendVerificationEmail = (email) => {\n\n    }\n\n    const getTextId = () => {\n        return _textID\n    }\n\n    const getEmailId = () => {\n        return _emailID\n    }\n\n    return {\n        sendVerificationText: sendVerificationText,\n        sendVerificationEmail: sendVerificationEmail,\n        checkTextVerification: checkTextVerification,\n        getTextId: getTextId,\n        getEmailId: getEmailId\n    }\n\n})();\n\nexport default VerificationHandler;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/VerificationHub.js",["116","117"],"import { useEffect, useState } from \"react\";\nimport VerificationHandler from \"../modules/VerificationHandler\";\n\n\nconst VerificationHub = (props) => {\n    \n    // props - user\n\n    const [ verifyingText, setVerifyingText ] = useState(false)\n    const [ verifyingEmail, setVerifyingEmail ] = useState(false)\n\n    const [phoneVerified, setPhoneVerified] = useState(true)\n    const [emailVerified, setEmailVerified] = useState(true)\n\n    const [verificationCode, setVerificationCode ] = useState(undefined)\n\n    const verifyText = async () => {\n        setVerifyingText(true)\n        await VerificationHandler.sendVerificationText(props.user.phone_number)\n    }\n\n    const verifyEmail = () => {\n        setVerifyingEmail(true)\n    }\n\n    const checkVerification = async (e) => {\n        e.preventDefault();\n        switch(e.target.id) {\n            case('text-verification-form'):\n                let res = await VerificationHandler.checkTextVerification(verificationCode)\n                if (res === true) {\n                    setVerifyingText(false)\n                    setPhoneVerified(true)\n                }\n                break;\n        }\n    }\n\n    const updateCode = (e) => {\n        setVerificationCode(e.target.value)\n    }\n\n    useEffect(() => {\n        setPhoneVerified(!!props.user.phone_number_verified)\n        setEmailVerified(!!props.user.email_verified)\n    }, [])\n\n    return (\n\n        <div className='VerificationHub'>\n            {(!phoneVerified && (!verifyingText && !verifyingEmail ))?<button onClick={verifyText}>Verify Phone Number</button>:null}\n            {(!emailVerified && (!verifyingText && !verifyingEmail ))?<button onClick={verifyEmail}>Verify Email</button>:null}\n            {(verifyingText)?\n                <div className='verification-modal text'>\n                    <form id='text-verification-form' onSubmit={checkVerification}>\n                        <label htmlFor='verification-code'>Verification Code</label>\n                        <input onChange={updateCode} id='varification-code' type='text' maxLength='4'></input>\n                        <button type='submit'>Verify</button>\n                    </form>\n                </div>\n            :null}\n            {(verifyingEmail)?\n                <div className='verification-modal email'>\n\n                </div>\n            :null}\n        </div>\n\n\n    );\n}\n\nexport default VerificationHub;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/Reminders/ActiveReminder.js",["118","119","120","121"],"import { useEffect, useState } from 'react';\n\nimport clearIcon from \"../../media/trash.png\"\nimport editIcon from \"../../media/edit.png\"\n\nconst moment = require('moment')\n\nconst ActiveReminder = (props) => {\n    // props - reminder {reminder object}, editReminder(reminder) {callback}, deleteReminder(reminder) {callback}\n\n\n    const editReminder = () => {\n        props.editReminder(props.reminder)\n    }\n\n    const deleteReminder = () => {\n        props.deleteReminder(props.reminder)\n    }\n\n    const getDateString = (date) => {\n        let str = `${moment(date).toDate()}`\n        let strArray = str.split('GMT')\n\n        let retStr = strArray[0].slice(0, -4)\n        return (retStr)\n    }\n\n    return (\n        <div className={`ActiveReminder ${props.reminder.title}`}>\n            <div className='active-reminder-header'>\n                <span className='active-reminder-title'> \n                    {props.reminder.title}\n                </span>\n                <button onClick={deleteReminder} className='active-reminder-icon-button'> <img className='active-reminder-icon' src={clearIcon}/> </button>\n                <button onClick={editReminder} className='active-reminder-icon-button'> <img className='active-reminder-icon' src={editIcon}/> </button>\n            </div>\n            <span className='active-reminder-next-date'>\n                {`Next Reminder:  ${getDateString(props.reminder.next_date)}`}\n            </span>\n        </div>\n    );\n}\n\nexport default ActiveReminder;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/modules/Scheduler.js",["122"],"import ReminderHandler from './ReminderHandler';\nconst schedule = require('node-schedule')\nconst moment = require('moment')\n\n\n\nconst Scheduler = (() => {\n\n    const scheduleAllUpdates  = (reminders) => {\n        reminders.forEach(r => {\n            scheduleUpdate(r)\n        })\n    }\n\n    const scheduleUpdate = (reminder) => {\n        // const dateAndTime = reminder.next_date.split('T')\n        // const reminderDate = moment.tz(`${dateAndTime[0]} ${dateAndTime[1]}`, reminder.time_zone).format()\n        let scheduleTime = moment(reminder.next_date).add(30, 'second').toDate()\n        let job = schedule.scheduleJob(scheduleTime, () => {\n            ReminderHandler.updateReminders()\n        });\n    }\n\n    return {\n        scheduleAllUpdates: scheduleAllUpdates,\n        scheduleUpdate: scheduleUpdate\n    }\n\n})();\n\nexport default Scheduler;","/home/josiah-eakle/Dev/Full-Apps/reminders/client/src/components/AccountHub.js",["123","124","125","126","127","128"],{"ruleId":"129","severity":1,"message":"130","line":8,"column":8,"nodeType":"131","messageId":"132","endLine":8,"endColumn":23},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"129","severity":1,"message":"137","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":49,"column":6,"nodeType":"140","endLine":49,"endColumn":12,"suggestions":"141"},{"ruleId":"138","severity":1,"message":"142","line":59,"column":8,"nodeType":"140","endLine":59,"endColumn":10,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":75,"column":107,"nodeType":"146","endLine":75,"endColumn":146},{"ruleId":"147","severity":1,"message":"148","line":16,"column":9,"nodeType":"149","messageId":"150","endLine":23,"endColumn":10},{"ruleId":"151","severity":1,"message":"152","line":53,"column":28,"nodeType":"153","messageId":"154","endLine":53,"endColumn":30},{"ruleId":"147","severity":1,"message":"148","line":43,"column":9,"nodeType":"149","messageId":"150","endLine":62,"endColumn":10},{"ruleId":"151","severity":1,"message":"152","line":116,"column":28,"nodeType":"153","messageId":"154","endLine":116,"endColumn":30},{"ruleId":"129","severity":1,"message":"155","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":14},{"ruleId":"129","severity":1,"message":"156","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":27},{"ruleId":"147","severity":1,"message":"148","line":64,"column":9,"nodeType":"149","messageId":"150","endLine":72,"endColumn":10},{"ruleId":"147","severity":1,"message":"148","line":93,"column":9,"nodeType":"149","messageId":"150","endLine":102,"endColumn":10},{"ruleId":"138","severity":1,"message":"157","line":111,"column":8,"nodeType":"140","endLine":111,"endColumn":10,"suggestions":"158"},{"ruleId":"138","severity":1,"message":"159","line":117,"column":8,"nodeType":"140","endLine":117,"endColumn":19,"suggestions":"160"},{"ruleId":"144","severity":1,"message":"145","line":133,"column":25,"nodeType":"146","endLine":133,"endColumn":114},{"ruleId":"144","severity":1,"message":"145","line":136,"column":25,"nodeType":"146","endLine":136,"endColumn":111},{"ruleId":"129","severity":1,"message":"161","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":19},{"ruleId":"129","severity":1,"message":"162","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":23},{"ruleId":"129","severity":1,"message":"137","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":19},{"ruleId":"147","severity":1,"message":"148","line":33,"column":9,"nodeType":"149","messageId":"150","endLine":49,"endColumn":10},{"ruleId":"138","severity":1,"message":"163","line":124,"column":8,"nodeType":"140","endLine":124,"endColumn":25,"suggestions":"164"},{"ruleId":"138","severity":1,"message":"165","line":139,"column":8,"nodeType":"140","endLine":139,"endColumn":15,"suggestions":"166"},{"ruleId":"144","severity":1,"message":"145","line":149,"column":29,"nodeType":"146","endLine":149,"endColumn":83},{"ruleId":"129","severity":1,"message":"167","line":1,"column":10,"nodeType":"131","messageId":"132","endLine":1,"endColumn":19},{"ruleId":"129","severity":1,"message":"168","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":13},{"ruleId":"129","severity":1,"message":"169","line":2,"column":7,"nodeType":"131","messageId":"132","endLine":2,"endColumn":12},{"ruleId":"170","severity":1,"message":"171","line":35,"column":17,"nodeType":"172","messageId":"173","endLine":35,"endColumn":44},{"ruleId":"170","severity":1,"message":"171","line":66,"column":36,"nodeType":"172","messageId":"173","endLine":66,"endColumn":73},{"ruleId":"147","severity":1,"message":"148","line":28,"column":9,"nodeType":"149","messageId":"150","endLine":36,"endColumn":10},{"ruleId":"138","severity":1,"message":"174","line":46,"column":8,"nodeType":"140","endLine":46,"endColumn":10,"suggestions":"175"},{"ruleId":"129","severity":1,"message":"161","line":1,"column":10,"nodeType":"131","messageId":"132","endLine":1,"endColumn":19},{"ruleId":"129","severity":1,"message":"176","line":1,"column":21,"nodeType":"131","messageId":"132","endLine":1,"endColumn":29},{"ruleId":"144","severity":1,"message":"145","line":34,"column":91,"nodeType":"146","endLine":34,"endColumn":146},{"ruleId":"144","severity":1,"message":"145","line":35,"column":89,"nodeType":"146","endLine":35,"endColumn":143},{"ruleId":"129","severity":1,"message":"177","line":19,"column":13,"nodeType":"131","messageId":"132","endLine":19,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":36,"column":9,"nodeType":"149","messageId":"150","endLine":44,"endColumn":10},{"ruleId":"178","severity":1,"message":"179","line":43,"column":13,"nodeType":"180","messageId":"181","endLine":43,"endColumn":43},{"ruleId":"144","severity":1,"message":"145","line":60,"column":116,"nodeType":"146","endLine":60,"endColumn":192},{"ruleId":"144","severity":1,"message":"145","line":69,"column":117,"nodeType":"146","endLine":69,"endColumn":194},{"ruleId":"144","severity":1,"message":"145","line":78,"column":124,"nodeType":"146","endLine":78,"endColumn":208},{"ruleId":"144","severity":1,"message":"145","line":89,"column":121,"nodeType":"146","endLine":89,"endColumn":203},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["182"],"no-negated-in-lhs",["183"],"'ReminderHub' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateLoggedInStatus'. Either include it or remove the dependency array.","ArrayExpression",["184"],"React Hook useEffect has a missing dependency: 'animateNextLetter'. Either include it or remove the dependency array.",["185"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'VerificationHandler' is defined but never used.","React Hook useEffect has a missing dependency: 'updateIntroText'. Either include it or remove the dependency array.",["186"],"React Hook useEffect has missing dependencies: 'animateNextLetter' and 'fullIntroText'. Either include them or remove the dependency array.",["187"],"'useEffect' is defined but never used.","'TimeZoneHandler' is defined but never used.","React Hook useEffect has a missing dependency: 'updateEditValues'. Either include it or remove the dependency array.",["188"],"React Hook useEffect has missing dependencies: 'cancelEdit' and 'updateEditValues'. Either include them or remove the dependency array.",["189"],"'Component' is defined but never used.","'Login' is defined but never used.","'axios' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","React Hook useEffect has missing dependencies: 'props.user.email_verified' and 'props.user.phone_number_verified'. Either include them or remove the dependency array. If 'setPhoneVerified' needs the current value of 'props.user.phone_number_verified', you can also switch to useReducer instead of useState and read 'props.user.phone_number_verified' in the reducer.",["190"],"'useState' is defined but never used.","'job' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [updateLoggedInStatus, user]",{"range":"205","text":"206"},"Update the dependencies array to be: [animateNextLetter]",{"range":"207","text":"208"},"Update the dependencies array to be: [updateIntroText]",{"range":"209","text":"210"},"Update the dependencies array to be: [animateNextLetter, fullIntroText, introText]",{"range":"211","text":"212"},"Update the dependencies array to be: [editingReminder, updateEditValues]",{"range":"213","text":"214"},"Update the dependencies array to be: [cancelEdit, props, updateEditValues]",{"range":"215","text":"216"},"Update the dependencies array to be: [props.user.email_verified, props.user.phone_number_verified]",{"range":"217","text":"218"},[1214,1220],"[updateLoggedInStatus, user]",[1952,1954],"[animateNextLetter]",[4163,4165],"[updateIntroText]",[4276,4287],"[animateNextLetter, fullIntroText, introText]",[3912,3929],"[editingReminder, updateEditValues]",[4287,4294],"[cancelEdit, props, updateEditValues]",[1377,1379],"[props.user.email_verified, props.user.phone_number_verified]"]